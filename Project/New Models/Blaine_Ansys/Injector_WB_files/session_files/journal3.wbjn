# encoding: utf-8
# 2022 R2
SetScriptVersion(Version="22.2.192")
system1 = GetSystem(Name="FLTG")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1 = GetDataEntity("/Mesh/TGridData:TGridData")
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=1))
mesh1 = system1.GetContainer(ComponentName="Mesh")
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "22.2"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-item "Key Behavioral Changes*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(%py-exec "preferences.General.KeyBehavioralChangesMessage.setState(True)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ImportSubMenu*Mesh...")')
setup1.SendCommand(Command="(%py-exec \"workflow.InitializeWorkflow(WorkflowType=r'Watertight Geometry')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.LengthUnit.setState(r'mm')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.AreaUnit.setState(r'mm^2')\")")
setup1.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.VolumeUnit.setState(r'mm^3')\")")
system2 = GetSystem(Name="Geom")
geometry1 = system2.GetContainer(ComponentName="Geometry")
geometry1.Edit(IsSpaceClaimGeometry=True)
system1.Delete()
system3 = GetSystem(Name="FLTG 1")
system3.Delete()
system4 = GetSystem(Name="FLTG 3")
system4.Delete()
system5 = GetSystem(Name="FLTG 2")
system5.Delete()
template1 = GetTemplate(TemplateName="FLTG")
geometryComponent1 = system2.GetComponent(Name="Geometry")
componentTemplate1 = GetComponentTemplate(Name="FluentTGridCellTemplate")
system6 = template1.CreateSystem(
    DataTransferFrom=[Set(FromComponent=geometryComponent1, TransferName=None, ToComponentTemplate=componentTemplate1)],
    Position="Right",
    RelativeTo=system2)
setup2 = system6.GetContainer(ComponentName="Setup")
fluentLauncherSettings2 = setup2.GetFluentLauncherSettings()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}, RunParallel=True))
tGridData2 = GetDataEntity("/Mesh/TGridData:TGridData")
tGridData2.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=1))
mesh2 = system6.GetContainer(ComponentName="Mesh")
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1 = system6.GetComponent(Name="Mesh")
meshComponent1.Refresh()
setup2.SendCommand(Command='/file/set-tui-version "22.2"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-item "Key Behavioral Changes*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(%py-exec "preferences.General.KeyBehavioralChangesMessage.setState(True)")')
setup2.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.LengthUnit.setState(r'm')\")")
setup2.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.AreaUnit.setState(r'm^2')\")")
setup2.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.VolumeUnit.setState(r'm^3')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Execute()\")")
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData2.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=1))
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup2.SendCommand(Command='/file/set-tui-version "22.2"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-item "Key Behavioral Changes*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(%py-exec "preferences.General.KeyBehavioralChangesMessage.setState(True)")')
setup2.SendCommand(Command="(%py-exec \"workflow.InitializeWorkflow(WorkflowType=r'Watertight Geometry')\")")
setup2.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.LengthUnit.setState(r'mm')\")")
setup2.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.AreaUnit.setState(r'mm^2')\")")
setup2.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.VolumeUnit.setState(r'mm^3')\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system6.Delete()
system7 = template1.CreateSystem(
    DataTransferFrom=[Set(FromComponent=geometryComponent1, TransferName=None, ToComponentTemplate=componentTemplate1)],
    Position="Right",
    RelativeTo=system2)
setup3 = system7.GetContainer(ComponentName="Setup")
fluentLauncherSettings3 = setup3.GetFluentLauncherSettings()
fluentLauncherSettings3.SetEntityProperties(Properties=Set(EnvPath={}, RunParallel=True))
tGridData3 = GetDataEntity("/Mesh/TGridData:TGridData")
tGridData3.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=1))
mesh3 = system7.GetContainer(ComponentName="Mesh")
Fluent.Edit(Container=mesh3)
setup3.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent2 = system7.GetComponent(Name="Mesh")
meshComponent2.Refresh()
setup3.SendCommand(Command='/file/set-tui-version "22.2"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-item "Key Behavioral Changes*PanelButtons*PushButton1(OK)")')
setup3.SendCommand(Command='(%py-exec "preferences.General.KeyBehavioralChangesMessage.setState(True)")')
setup3.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.LengthUnit.setState(r'm')\")")
setup3.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.AreaUnit.setState(r'm^2')\")")
setup3.SendCommand(Command="(%py-exec \"meshing.GlobalSettings.VolumeUnit.setState(r'm^3')\")")
setup3.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup3.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.339198 0.770496 -0.271596) '(0 0 0) '(-0.197941 -0.655503 -0.214295) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.520117 -0.826613 0.521301) '(0 0 0) '(0.830555 0.938895 0.677798) 0 0)")
setup3.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildToTask()\")")
setup3.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Execute()\")")
setup3.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.0381396 0.298962 -0.143422) '(0 0 0) '(-0.420981 -0.11773 -0.357365) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.00491956 -0.110694 0.0485708) '(0 0 0) '(0.388364 0.118796 0.311335) 0 0)")
geometry1.Exit()
Save(Overwrite=True)
